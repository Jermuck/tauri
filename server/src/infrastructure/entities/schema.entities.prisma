generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserEntity {
  id          Int            @id @unique @default(autoincrement())
  username    String         @unique()
  password    String
  email       String         @unique
  updateDate  DateTime       @updatedAt
  createDate  DateTime       @default(now())
  description String?
  token       TokenEntity?
  profile     ProfileEntity?
  userRoom  RoomEntity? @relation("UserRoomRelation")
  conversationRoom  RoomEntity? @relation("ConversationRoomRelation")
}

model TokenEntity {
  id     Int         @unique @default(autoincrement())
  token  String
  userId Int?        @unique
  user   UserEntity? @relation(fields: [userId], references: [id])
}

model ProfileEntity {
  id       Int        @unique @default(autoincrement())
  name     String?
  lastname String?
  phone    String?
  user     UserEntity @relation(fields: [userId], references: [id])
  userId   Int        @unique
}

model RoomEntity {
  id             Int        @unique @default(autoincrement())
  user           UserEntity @relation("UserRoomRelation", fields: [userId], references: [id])
  userId         Int       @unique
  conversation   UserEntity @relation("ConversationRoomRelation", fields: [conversationId], references: [id])
  conversationId Int       @unique
  messageObject MessageEntity[]
}

model MessageEntity{
  id Int @unique @default(autoincrement())
  room RoomEntity @relation(fields: [roomId], references: [id])
  roomId Int
  message String
  time DateTime
}